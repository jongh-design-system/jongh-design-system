{"name":"Select","dependencies":["@radix-ui/react-select"],"files":[{"name":"index.tsx","content":"import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { createStyleContext } from \"@utils/createStyleContext\"\nimport { type HTMLStyledProps } from \"@styled-system/jsx\"\nimport { select } from \"@styled-system/recipes\"\nimport type { Assign, ComponentProps } from \"@styled-system/types\"\n\nconst { withProvider, withContext } = createStyleContext(select)\n\nexport const SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ children, ...props }, ref) => (\n  <SelectPrimitive.Trigger ref={ref} {...props}>\n    {children}\n    <SelectPrimitive.Icon asChild></SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nexport const SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      position={position}\n      data-position={position}\n      {...props}\n    >\n      {children}\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nexport const Indicator = withContext(\n  SelectPrimitive.ItemIndicator,\n  \"itemIndicator\",\n)\n\nexport const SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ children, ...props }, ref) => (\n  <SelectPrimitive.Item ref={ref} {...props}>\n    <Indicator></Indicator>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nexport type RootProps = React.ComponentProps<typeof SelectPrimitive.Root>\nexport const Root = withProvider<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<\"div\">, RootProps>\n>(SelectPrimitive.Root, \"root\")\n\nexport const Group = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<\"div\">, ComponentProps<typeof SelectPrimitive.Group>>\n>(SelectPrimitive.Group, \"group\")\n\nexport const Value = withContext<\n  HTMLSpanElement,\n  Assign<HTMLStyledProps<\"span\">, ComponentProps<typeof SelectPrimitive.Value>>\n>(SelectPrimitive.Value, \"value\")\n\nexport const Trigger = withContext<\n  HTMLButtonElement,\n  Assign<HTMLStyledProps<\"button\">, ComponentProps<typeof SelectTrigger>>\n>(SelectTrigger, \"trigger\")\n\nexport const Content = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<\"div\">, ComponentProps<typeof SelectContent>>\n>(SelectContent, \"content\")\n\nexport const Viewport = withContext<\n  HTMLDivElement,\n  Assign<\n    HTMLStyledProps<\"div\">,\n    ComponentProps<typeof SelectPrimitive.Viewport>\n  >\n>(SelectPrimitive.Viewport, \"viewport\")\n\nexport const Label = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<\"div\">, ComponentProps<typeof SelectPrimitive.Label>>\n>(SelectPrimitive.Label, \"label\")\n\nexport const Item = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<\"div\">, ComponentProps<typeof SelectItem>>\n>(SelectItem, \"item\")\n\nexport const Separator = withContext<\n  HTMLDivElement,\n  Assign<\n    HTMLStyledProps<\"div\">,\n    ComponentProps<typeof SelectPrimitive.Separator>\n  >\n>(SelectPrimitive.Separator, \"separator\")\n"},{"name":"recipe.ts","content":"import { defineSafe } from \"@utils/defineSafe\"\n\nexport const selectRecipe = defineSafe.slotRecipe({\n  className: \"select\",\n  description: \"Styles for the Select component\",\n  slots: [\n    \"root\",\n    \"group\",\n    \"value\",\n    \"trigger\",\n    \"viewport\",\n    \"content\",\n    \"label\",\n    \"item\",\n    \"itemIndicator\",\n    \"separator\",\n  ],\n  base: {\n    trigger: {\n      display: \"flex\",\n      h: \"10\",\n      w: \"full\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      rounded: \"md\",\n      border: \"input\",\n      bg: \"transparent\",\n      px: \"3\",\n      py: \"2\",\n      textStyle: \"sm\",\n      cursor: \"pointer\",\n      ringColor: \"background\",\n\n      _placeholder: {\n        color: \"muted.foreground\",\n      },\n\n      _focus: {\n        ringWidth: \"1\",\n        ringColor: \"ring\",\n        outlineOffset: \"2\",\n      },\n\n      _disabled: {\n        cursor: \"not-allowed\",\n        opacity: \"0.5\",\n      },\n    },\n    viewport: {\n      \"&[data-position=popper]\": {\n        h: \"var(--radix-select-trigger-height)\",\n        w: \"full\",\n        minW: \"var(--radix-select-trigger-width)\",\n      },\n    },\n    content: {\n      position: \"relative\",\n      zIndex: 50,\n      minW: \"full\",\n      overflow: \"hidden\",\n      rounded: \"md\",\n      border: \"base\",\n      bg: \"popover\",\n      color: \"popover.foreground\",\n      shadow: \"md\",\n\n      // \"&[data-state=open]\": {\n      //   animateIn: true,\n      //   fadeIn: 0,\n      //   zoomIn: 95,\n      // },\n\n      // \"&[data-state=closed]\": {\n      //   animateOut: true,\n      //   fadeOut: 0,\n      //   zoomOut: 95,\n      // },\n\n      // \"&[data-side=top]\": {\n      //   slideInFromBottom: \"2\",\n      // },\n\n      // \"&[data-side=bottom]\": {\n      //   slideInFromTop: \"2\",\n      // },\n\n      // \"&[data-side=left]\": {\n      //   slideInFromRight: \"2\",\n      // },\n\n      // \"&[data-side=right]\": {\n      //   slideInFromLeft: \"2\",\n      // },\n\n      \"&[data-position=popper]\": {\n        \"&[data-side=top]\": {\n          translateY: \"-1\",\n        },\n\n        \"&[data-side=bottom]\": {\n          translateY: \"1\",\n        },\n\n        \"&[data-side=left]\": {\n          translateX: \"-1\",\n        },\n\n        \"&[data-side=right]\": {\n          translateX: \"1\",\n        },\n      },\n    },\n    label: {\n      py: \"1.5\",\n      pl: \"8\",\n      pr: \"2\",\n      textStyle: \"sm\",\n      fontWeight: \"semibold\",\n    },\n    item: {\n      position: \"relative\",\n      display: \"flex\",\n      cursor: \"default\",\n      userSelect: \"none\",\n      alignItems: \"center\",\n      rounded: \"sm\",\n      py: \"1.5\",\n      pl: \"8\",\n      pr: \"2\",\n      textStyle: \"sm\",\n\n      _focus: {\n        bg: \"accent\",\n        color: \"accent.foreground\",\n      },\n\n      [\"&[data-disabled]\"]: {\n        pointerEvents: \"none\",\n        opacity: \"0.5\",\n      },\n    },\n    itemIndicator: {\n      position: \"absolute\",\n      left: \"2\",\n      display: \"flex\",\n      h: \"3.5\",\n      w: \"3.5\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    separator: {\n      mx: \"-1\",\n      my: \"1\",\n      h: \"1\",\n      bg: \"muted\",\n    },\n  },\n})\n"}]}