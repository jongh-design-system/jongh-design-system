{"name":"Slider","dependencies":["@radix-ui/react-slider"],"files":[{"name":"index.tsx","content":"import { slider } from \"@styled-system/recipes\"\nimport type {\n  ComponentProps,\n  HTMLStyledProps,\n  Assign,\n} from \"@styled-system/types\"\nimport { createStyleContext } from \"@utils/createStyleContext\"\nimport * as BaseSlider from \"@radix-ui/react-slider\"\n\nconst { withProvider, withContext } = createStyleContext(slider)\n\nexport const Root = withProvider<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<\"div\">, ComponentProps<typeof BaseSlider.Root>>\n>(BaseSlider.Root, \"root\")\n\nexport const Track = withContext<\n  HTMLSpanElement,\n  Assign<HTMLStyledProps<\"span\">, ComponentProps<typeof BaseSlider.Track>>\n>(BaseSlider.Track, \"track\")\n\nexport const Range = withContext<\n  HTMLSpanElement,\n  Assign<HTMLStyledProps<\"span\">, ComponentProps<typeof BaseSlider.Range>>\n>(BaseSlider.Range, \"range\")\n\nexport const Thumb = withContext<\n  HTMLSpanElement,\n  Assign<HTMLStyledProps<\"span\">, ComponentProps<typeof BaseSlider.Thumb>>\n>(BaseSlider.Thumb, \"thumb\")\n"},{"name":"recipe.ts","content":"import { defineSafe } from \"@utils/defineSafe\"\n\nexport const sliderRecipe = defineSafe.slotRecipe({\n  className: \"slider\",\n  description: \"Styles for the Slider component\",\n  slots: [\"root\", \"track\", \"range\", \"thumb\"],\n  base: {\n    root: {\n      position: \"relative\",\n      display: \"flex\",\n      w: \"full\",\n      touchAction: \"none\",\n      userSelect: \"none\",\n      alignItems: \"center\",\n    },\n    track: {\n      position: \"relative\",\n      h: \"2\",\n      w: \"full\",\n      flexGrow: \"1\",\n      overflow: \"hidden\",\n      rounded: \"full\",\n      bg: \"secondary\",\n    },\n    range: {\n      position: \"absolute\",\n      h: \"full\",\n      bg: \"primary\",\n    },\n    thumb: {\n      display: \"block\",\n      h: \"5\",\n      w: \"5\",\n      cursor: \"pointer\",\n      rounded: \"full\",\n      borderWidth: \"2px\",\n      borderStyle: \"solid\",\n      borderColor: \"primary\",\n      bg: \"background\",\n      ringColor: \"background\",\n      transition: \"colors\",\n\n      _focusVisible: {\n        outline: \"primary\",\n        outlineOffset: \"2\",\n        ringWidth: \"2\",\n        ringColor: \"ring\",\n        ringOffset: \"2\",\n      },\n\n      _disabled: {\n        pointerEvents: \"none\",\n        opacity: \"0.5\",\n      },\n    },\n  },\n})\n"}]}