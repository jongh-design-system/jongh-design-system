{"name":"Tabs","dependencies":["@radix-ui/react-tabs"],"files":[{"name":"index.tsx","content":"import * as TabsPrimitive from \"@radix-ui/react-tabs\"\nimport { createStyleContext } from \"@utils/createStyleContext\"\nimport { tabs } from \"@styled-system/recipes\"\nimport type {\n  Assign,\n  HTMLStyledProps,\n  ComponentProps,\n} from \"@styled-system/types\"\n\nconst { withProvider, withContext } = createStyleContext(tabs)\n\nexport const Root = withProvider<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<\"div\">, ComponentProps<typeof TabsPrimitive.Root>>\n>(TabsPrimitive.Root, \"root\")\nexport const List = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<\"div\">, ComponentProps<typeof TabsPrimitive.List>>\n>(TabsPrimitive.List, \"list\")\nexport const Trigger = withContext<\n  HTMLButtonElement,\n  Assign<\n    HTMLStyledProps<\"button\">,\n    ComponentProps<typeof TabsPrimitive.Trigger>\n  >\n>(TabsPrimitive.Trigger, \"trigger\")\nexport const Content = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<\"div\">, ComponentProps<typeof TabsPrimitive.Content>>\n>(TabsPrimitive.Content, \"content\")\n"},{"name":"recipe.ts","content":"import { defineSafe } from \"@utils/defineSafe\"\n\nexport const tabsRecipe = defineSafe.slotRecipe({\n  className: \"tabs\",\n  description: \"Styles for the Tabs component\",\n  slots: [\"root\", \"list\", \"trigger\", \"content\"],\n  base: {\n    list: {\n      display: \"inline-flex\",\n      h: \"10\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      rounded: \"md\",\n      bg: \"muted\",\n      p: \"1\",\n      color: \"muted.foreground\",\n    },\n    trigger: {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      whiteSpace: \"nowrap\",\n      rounded: \"sm\",\n      px: \"3\",\n      py: \"1.5\",\n      textStyle: \"sm\",\n      fontWeight: \"medium\",\n      transition: \"all\",\n      cursor: \"pointer\",\n      ringColor: \"background\",\n\n      _focusVisible: {\n        outlineWidth: \"2px\",\n        outlineOffset: \"2\",\n        ringWidth: \"2\",\n        ringColor: \"ring\",\n        offset: \"2\",\n      },\n\n      _disabled: {\n        pointerEvents: \"none\",\n        opacity: \"50%\",\n      },\n\n      \"&[data-state=active]\": {\n        bg: \"background\",\n        color: \"foreground\",\n        shadow: \"sm\",\n      },\n    },\n    content: {\n      mt: \"2\",\n      ringColor: \"background\",\n\n      _focusVisible: {\n        outlineWidth: \"2\",\n        outlineOffset: \"2\",\n        ringWidth: \"2\",\n        ringColor: \"ring\",\n      },\n    },\n  },\n})\n"}]}