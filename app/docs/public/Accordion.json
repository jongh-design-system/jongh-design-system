{"name":"Accordion","dependencies":["@radix-ui/react-accordion"],"files":[{"name":"index.tsx","content":"import * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { createStyleContext } from \"@utils/createStyleContext\"\nimport { accordion, type AccordionVariantProps } from \"@styled-system/recipes\"\nimport {\n  type Assign,\n  type ComponentProps,\n  type HTMLStyledProps,\n} from \"@styled-system/types\"\n\nconst { withProvider, withContext } = createStyleContext(accordion)\n\nexport const Root = withProvider<\n  HTMLDivElement,\n  Assign<\n    Assign<\n      HTMLStyledProps<\"div\">,\n      ComponentProps<typeof AccordionPrimitive.Root>\n    >,\n    AccordionVariantProps\n  >\n>(AccordionPrimitive.Root, \"root\")\n\nexport const Header = withContext<\n  HTMLDivElement,\n  Assign<\n    HTMLStyledProps<\"div\">,\n    ComponentProps<typeof AccordionPrimitive.Header>\n  >\n>(AccordionPrimitive.Header, \"header\")\n\nexport const Item = withContext<\n  HTMLDivElement,\n  Assign<HTMLStyledProps<\"div\">, ComponentProps<typeof AccordionPrimitive.Item>>\n>(AccordionPrimitive.Item, \"item\")\n\nexport const Trigger = withContext<\n  HTMLButtonElement,\n  Assign<\n    HTMLStyledProps<\"button\">,\n    ComponentProps<typeof AccordionPrimitive.Trigger>\n  >\n>(AccordionPrimitive.Trigger, \"trigger\")\n\nexport const Content = withContext<\n  HTMLDivElement,\n  Assign<\n    HTMLStyledProps<\"div\">,\n    ComponentProps<typeof AccordionPrimitive.Content>\n  >\n>(AccordionPrimitive.Content, \"content\")\n"},{"name":"recipe.ts","content":"import { defineSafe } from \"@utils/defineSafe\"\n\nexport const accordionRecipe = defineSafe.slotRecipe({\n  className: \"accordion\",\n  description: \"Styles for the Accordion component\",\n  slots: [\"root\", \"item\", \"header\", \"trigger\", \"content\"],\n  base: {\n    item: {\n      borderBottom: \"base\",\n    },\n    header: {\n      display: \"flex\",\n    },\n    trigger: {\n      display: \"flex\",\n      flex: \"1\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      py: \"4\",\n      fontWeight: \"medium\",\n      transition: \"all\",\n      cursor: \"pointer\",\n\n      _hover: {\n        textDecoration: \"underline\",\n      },\n\n      \"& > svg\": {\n        h: \"4\",\n        w: \"4\",\n        flexShrink: \"0\",\n        transition: \"transform\",\n        transitionDuration: \"normal\",\n      },\n\n      \"&[data-state=open] > svg\": {\n        transform: \"rotate(180deg)\",\n      },\n    },\n    content: {\n      overflow: \"hidden\",\n      textStyle: \"sm\",\n      transition: \"all\",\n\n      \"&[data-state=closed]\": {\n        animationName: \"accordion-up_radix\",\n        animationDuration: \"normal\",\n      },\n\n      \"&[data-state=open]\": {\n        animationName: \"accordion-down_radix\",\n        animationDuration: \"normal\",\n      },\n\n      \"& > div\": {\n        pb: \"4\",\n        pt: \"0\",\n      },\n    },\n  },\n  variants: {\n    variant: {\n      sm: {\n        trigger: {\n          color: \"amber.700\",\n        },\n        content: {\n          color: \"pink.300\",\n        },\n      },\n    },\n  },\n})\n"}]}