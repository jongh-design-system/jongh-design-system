{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"","sourcesContent":["// polymorphic.d.ts\nimport {\n  type ComponentPropsWithRef,\n  type ComponentPropsWithoutRef,\n  type ElementType,\n} from \"react\"\n\ntype AsProp<C extends ElementType> = {\n  as?: C\n}\n\nexport type AsRef<C extends ElementType> = ComponentPropsWithRef<C>[\"ref\"]\n\nexport type AsComponentProps<\n  C extends ElementType,\n  Props = object,\n> = AsProp<C> &\n  ComponentPropsWithoutRef<C> &\n  Props & {\n    ref?: AsRef<C>\n  }\n\nexport type AsComponentPropsWithRef<\n  C extends ElementType,\n  Props = object,\n> = Props & { ref?: AsRef<C> }\n"]}